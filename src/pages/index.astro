---
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import LinkButton from "@/components/LinkButton.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Cta from "@/components/Cta.astro";
import abstractVector from "@/assets/images/abstract-vector.png";
import servicesImage from "@/assets/images/services.svg";
import { getImageFromPath } from "@/utils/images";

import { getEntry } from "astro:content";
const siteConfig = await getEntry("site", "config");
const SITE = siteConfig!.data;

interface ServiceItem {
  name: string;
}

interface ServiceButton {
  text: string;
  href: string;
}

interface HeroButton {
  text: string;
  href: string;
  variant: "default" | "outline";
}

interface HomeContent {
  seo: {
    title: string;
    description: string;
  };
  hero: {
    title: string;
    description: string;
    buttons: HeroButton[];
  };
  services: {
    title: string;
    items: ServiceItem[];
    button: ServiceButton;
  };
  sbm: {
    title: string;
    description: string;
    categories: string[];
    button: ServiceButton;
  };
  clients: {
    title: string;
    images: string[];
    button: {
      text: string;
      href: string;
    };
  };
}

// Get home page content
const home = await import("../pages/home.md");
const { hero, services, sbm, clients, seo } = home.frontmatter as HomeContent;

// Process client images using the enhanced getImageFromPath utility
const clientImages = clients.images.map(imagePath =>
  getImageFromPath(imagePath)
);
---

<Layout
  title={seo.title ? `${SITE.siteName} | ${seo.title}` : SITE.siteName}
  description={seo.description || SITE.description}
>
  <Header activeNav="home" />

  <main id="main-content">
    <section
      id="hero"
      class="relative min-h-[calc(734px+var(--header-height))] w-full min-w-full sm:min-h-[734px]"
    >
      <div class="absolute inset-0 z-0">
        <Image
          src={abstractVector}
          alt=""
          class="h-full w-full object-cover"
          quality="max"
          loading="eager"
          priority
        />
      </div>

      <div
        class="relative z-10 mx-auto max-w-[960px]"
        style="padding-top: calc(var(--header-height) + 160px)"
      >
        <div class="max-w-[826px] bg-white/80 p-8">
          <h1
            class="font-domine text-[32px] leading-[200%] font-normal text-[#0D2B46]"
          >
            {hero.title}
          </h1>
          <p class="mt-4 text-lg text-[#0D2B46]">{hero.description}</p>
          <div class="mt-8 flex flex-col gap-4 sm:flex-row">
            {
              hero.buttons.map(button => (
                <LinkButton
                  href={button.href}
                  className="w-full sm:w-auto"
                  variant={
                    button.variant === "outline" ? "secondary" : "primary"
                  }
                >
                  {button.text}
                </LinkButton>
              ))
            }
          </div>
        </div>
      </div>
    </section>

    <section id="services" class="services w-full min-w-full bg-[#ffffff]">
      <div class="mx-auto w-full max-w-[960px] px-4 pb-16">
        <div class="grid grid-cols-1 gap-8 sm:grid-cols-2">
          {/* Left Column */}
          <div class="flex flex-col justify-start">
            <h2 class="font-domine mb-6 text-2xl font-normal text-[#0D2B46]">
              {services.title}
            </h2>
            <div class="flex flex-col space-y-6 rounded-md bg-[#F6F6F6] p-6">
              {
                services.items.map((service: ServiceItem) => (
                  <div class="border-b border-gray-200 pb-4 last:border-b-0 last:pb-0">
                    <h3 class="font-domine text-lg font-medium text-[#0D2B46]">
                      {service.name}
                    </h3>
                  </div>
                ))
              }
            </div>
            <div class="mt-6">
              <LinkButton href={services.button.href} variant="link">
                {services.button.text}
              </LinkButton>
            </div>
          </div>

          {/* Right Column - Services Image */}
          <div class="flex items-center justify-center">
            <Image
              src={servicesImage}
              alt="Our Services Illustration"
              width={500}
              height={500}
              class="h-auto w-full"
              loading="eager"
              priority
            />
          </div>
        </div>
      </div>
    </section>

    <section id="sbm" class="sbm w-full min-w-full bg-[#ffffff]">
      <div class="mx-auto w-full max-w-[960px] px-4 py-16">
        <h2 class="font-domine mb-6 text-2xl font-normal text-[#0D2B46]">
          {sbm.title}
        </h2>

        {
          /* Desktop Layout: 4 categories with centered pipes between (1 left, 2-3 center, 4 right) */
        }
        <div class="mb-6 hidden sm:grid sm:grid-cols-7 sm:items-center">
          <div class="text-left font-medium text-[#0D2B46]">
            {sbm.categories[0]}
          </div>
          <div class="text-center text-gray-300">|</div>
          <div class="text-center font-medium text-[#0D2B46]">
            {sbm.categories[1]}
          </div>
          <div class="text-center text-gray-300">|</div>
          <div class="text-center font-medium text-[#0D2B46]">
            {sbm.categories[2]}
          </div>
          <div class="text-center text-gray-300">|</div>
          <div class="text-right font-medium text-[#0D2B46]">
            {sbm.categories[3]}
          </div>
        </div>

        {/* Mobile Layout */}
        <div class="mb-6 grid grid-cols-2 sm:hidden">
          {
            sbm.categories.map((category: string, index: number) => (
              <div
                class={`p-4 text-center font-medium text-[#0D2B46] ${
                  index < 2 ? "border-b" : ""
                } ${index % 2 === 0 ? "border-r" : ""} border-gray-200`}
              >
                {category}
              </div>
            ))
          }
        </div>

        <p
          class="mb-3 font-['Open_Sans'] text-[18px] leading-[200%] font-normal text-[#0D2B46]"
        >
          {sbm.description}
        </p>

        <div class="mt-6">
          <LinkButton
            href={sbm.button.href}
            className="max-w-full"
            variant="link"
          >
            <span class="block truncate">{sbm.button.text}</span>
          </LinkButton>
        </div>
      </div>
    </section>

    <section id="clients" class="clients mb-6 w-full min-w-full bg-[#ffffff]">
      <div class="mx-auto w-full max-w-[960px] px-4 py-16">
        <h2 class="font-domine mb-2 text-2xl font-normal text-[#0D2B46]">
          {clients.title}
        </h2>

        <div class="grid grid-cols-2 gap-4 sm:grid-cols-6">
          {
            clientImages.length > 0 ? (
              clientImages.map(imageSrc => (
                <div class="flex flex-col items-center justify-center">
                  <Image
                    src={imageSrc}
                    alt="Client Logo"
                    width={150}
                    height={150}
                    class="h-auto w-full"
                  />
                </div>
              ))
            ) : (
              <p>No client images available</p>
            )
          }
        </div>

        <div class="mt-6">
          <LinkButton
            href={clients.button.href}
            className="max-w-full"
            variant="link"
          >
            <span class="block truncate">{clients.button.text}</span>
          </LinkButton>
        </div>
      </div>
    </section>
  </main>

  <Cta />

  <Footer />
</Layout>
