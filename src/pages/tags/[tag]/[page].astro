---
import { type CollectionEntry, getCollection } from "astro:content";
import NewsTagPosts from "@/layouts/NewsTagPosts.astro";
import getUniqueTags from "@/utils/getUniqueTags";
import getPostsByTag from "@/utils/getPostsByTag";
import getPageNumbers from "@/utils/getPageNumbers";
import getPagination from "@/utils/getPagination";

export interface Props {
  post: CollectionEntry<"news">;
  tag: string;
  tagName: string;
}

export async function getStaticPaths() {
  const news = await getCollection("news");

  const tags = getUniqueTags(news);

  return tags.flatMap(({ tag, tagName }) => {
    const tagPosts = getPostsByTag(news, tag);
    const totalPages = getPageNumbers(tagPosts.length);

    return totalPages.map(page => ({
      params: { tag, page },
      props: { tag, tagName },
    }));
  });
}

const { page } = Astro.params;
const { tag, tagName } = Astro.props;

const posts = await getCollection("news", ({ data }) => !data.draft);

const postsByTag = getPostsByTag(posts, tag);

const pagination = getPagination({
  posts: postsByTag,
  page,
});
---

<NewsTagPosts {...pagination} tag={tag} tagName={tagName} />

{tag}
{tagName}
