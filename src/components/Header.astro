---
import { Image } from "astro:assets";
import logoWhite from "/src/assets/images/logo.svg";
import { Menu, X } from "lucide-react";

import { getEntry } from "astro:content";
const siteConfig = await getEntry("site", "config");
const SITE = siteConfig!.data;

export interface Props {
  activeNav?: "home" | "about" | "sbm" | "work" | "contact";
}

const { activeNav } = Astro.props;
---

<header
  class="fixed left-0 right-0 top-0 z-50 h-auto min-h-20 bg-white/90 backdrop-blur-md sm:h-[100px]"
>
  <a
    id="skip-to-content"
    href="#main-content"
    class="absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4"
  >
    Skip to content
  </a>
  <div class="mx-auto h-full max-w-[960px]">
    <div class="flex h-full flex-col sm:flex-row sm:items-end sm:justify-end">
      <div
        class="relative flex w-full flex-col p-4 sm:flex-row sm:items-center sm:pb-1 sm:pt-0"
      >
        <div class="flex w-full items-center justify-between">
          <a
            href="/"
            class="whitespace-nowrap py-1 text-xl font-semibold sm:text-2xl"
          >
            <Image
              src={logoWhite}
              alt={SITE.siteName}
              width={133.64}
              height={25.05}
              loading="eager"
            />
          </a>
          <button
            class="hamburger-menu focus-outline p-2 sm:hidden"
            aria-label="Open Menu"
            aria-expanded="false"
            aria-controls="menu-items"
          >
            <Menu
              client:load
              className="menu-icon h-6 w-6 scale-125"
              strokeWidth={1.5}
            />
            <X
              client:load
              className="close-icon hidden h-6 w-6 scale-125"
              strokeWidth={1.5}
            />
          </button>
        </div>
        <nav
          class="mobile-nav fixed inset-0 top-[80px] -z-10 h-[calc(100vh-80px)] transform bg-white opacity-0 transition-[clip-path,opacity] duration-500 ease-in-out sm:relative sm:top-0 sm:z-auto sm:mt-4 sm:flex sm:h-auto sm:w-full sm:transform-none sm:flex-row sm:items-center sm:justify-end sm:bg-transparent sm:opacity-100"
        >
          <ul
            id="menu-items"
            class="flex h-full w-full flex-col items-center justify-center space-y-8 text-2xl opacity-0 transition-opacity delay-100 duration-300 sm:ml-0 sm:mt-0 sm:h-auto sm:w-auto sm:flex-row sm:items-center sm:justify-end sm:space-x-5 sm:space-y-0 sm:text-base sm:opacity-100"
          >
            <li class="w-full text-center sm:hidden">
              <a
                href="/"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent ${activeNav === "home" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                Home
              </a>
            </li>
            <li class="w-full text-center sm:w-auto">
              <a
                href="/about/"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:inline-block sm:px-2 sm:py-1 ${activeNav === "about" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                About
              </a>
            </li>
            <li class="w-full text-center sm:w-auto">
              <a
                href="/sbm/"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:inline-block sm:px-2 sm:py-1 ${activeNav === "sbm" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                SBM
              </a>
            </li>
            <li class="w-full text-center sm:w-auto">
              <a
                href="/work/"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:inline-block sm:px-2 sm:py-1 ${activeNav === "work" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                Work
              </a>
            </li>
            <li class="w-full text-center sm:w-auto">
              <a
                href="/contact/"
                class={`block px-4 py-3 font-medium transition-colors hover:text-skin-accent sm:inline-block sm:px-2 sm:py-1 ${activeNav === "contact" ? "underline decoration-wavy decoration-2 underline-offset-4" : ""}`}
              >
                Contact
              </a>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </div>
</header>

<style>
  .hamburger-menu.is-active .menu-icon {
    display: none;
  }
  .hamburger-menu.is-active .close-icon {
    display: block;
  }

  /* Menu animations and transitions */
  .mobile-nav {
    clip-path: circle(0% at calc(100% - 2rem) 2rem);
    pointer-events: none;
  }

  .mobile-nav.is-active {
    clip-path: circle(170% at calc(100% - 2rem) 2rem);
    opacity: 1;
    pointer-events: all;
    z-index: 40;
  }

  .mobile-nav.is-active #menu-items {
    opacity: 1;
  }

  /* Menu icon transition */
  .menu-icon,
  .close-icon {
    transition: all 0.2s ease-in-out;
  }

  @media (min-width: 640px) {
    .mobile-nav {
      clip-path: none;
      pointer-events: all;
    }
  }
</style>

<script>
  function toggleNav() {
    const menuBtn = document.querySelector(".hamburger-menu");
    const mobileNav = document.querySelector(".mobile-nav");
    const body = document.body;

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuBtn.classList.toggle("is-active");
      mobileNav?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );

      // Prevent body scroll when menu is open
      if (!menuExpanded) {
        body.style.overflow = "hidden";
      } else {
        body.style.overflow = "";
      }
    });
  }

  toggleNav();

  document.addEventListener("astro:after-swap", toggleNav);
</script>
