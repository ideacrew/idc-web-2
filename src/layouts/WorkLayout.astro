---
import { Image } from "astro:assets";
import Breadcrumbs from "@/components/Breadcrumbs.astro";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import Layout from "@/layouts/Layout.astro";
import Cta from "@/components/Cta.astro";
import { getCollection } from "astro:content";
import placeholderImage from "../assets/images/about-us.svg";
import type { CollectionEntry } from "astro:content";
import { Card, CardContent } from "@/components/ui/card";

import { getEntry } from "astro:content";
const siteConfig = await getEntry("site", "config");
const SITE = siteConfig!.data;

export interface Props {
  frontmatter: {
    seo: {
      title: string;
      description?: string;
    };
  };
}

const { frontmatter } = Astro.props;

// Dynamic image imports with type
const images = import.meta.glob<{ default: ImageMetadata }>(
  [
    "../assets/images/work/*.{jpeg,jpg,png,gif}",
    "../assets/images/clients/*.{jpeg,jpg,png,gif}",
    "../assets/images/*.{jpeg,jpg,png,gif,svg}",
  ],
  { eager: true }
);

// Function with type safety
const getImageFromPath = (path: string): ImageMetadata => {
  // Remove the leading slash if it exists
  const cleanPath = path.startsWith("/") ? path.slice(1) : path;

  // Try different possible paths
  const possiblePaths = [
    `../assets/${cleanPath}`,
    `../assets/images/work/${cleanPath.split("/").pop()}`,
    `../assets/images/clients/${cleanPath.split("/").pop()}`,
    `../assets/images/${cleanPath.split("/").pop()}`,
  ];

  // Find the first matching image
  for (const tryPath of possiblePaths) {
    if (images[tryPath]) {
      return images[tryPath].default;
    }
  }

  // Return placeholder if no match found
  return placeholderImage;
};

const workItems = (await getCollection("work")) as CollectionEntry<"work">[];
const sortedWorkItems = workItems.sort(
  (a, b) => (a.data.sortOrder || 999) - (b.data.sortOrder || 999)
);
---

<Layout
  title={`${frontmatter.seo.title} | ${SITE.siteName}`}
  description={frontmatter.seo.description || SITE.description}
>
  <Header activeNav="work" />
  <Breadcrumbs />
  <main id="main-content">
    <section class="w-full min-w-full">
      <div class="mx-auto w-full max-w-[960px] px-4 py-16">
        <div
          class="mb-3 font-sans text-[18px] font-normal leading-[200%] text-[#0D2B46]"
        >
          <h1
            class="mb-6 font-domine text-[36px] font-normal leading-normal text-[#0D2B46]"
          >
            {frontmatter.seo.title}
          </h1>

          {
            frontmatter.seo.description && (
              <p class="mb-8 font-sans text-[14px] font-normal leading-[200%] text-[#0D2B46]">
                {frontmatter.seo.description}
              </p>
            )
          }

          <div
            class="mb-16 grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4"
          >
            {
              sortedWorkItems.map(work => (
                <Card className="group overflow-hidden transition-all hover:-translate-y-1 hover:shadow-lg">
                  <a href={`/work/${work.slug}`}>
                    <div class="flex h-[210px] w-full items-center justify-center p-4">
                      <div class="h-[178px] w-[178px] overflow-hidden rounded-lg">
                        <Image
                          src={getImageFromPath(work.data.image.src)}
                          alt={work.data.image.alt}
                          width={178}
                          height={178}
                          class="h-full w-full object-cover"
                        />
                      </div>
                    </div>
                    <CardContent className="p-4">
                      <h3 class="mb-2 line-clamp-2 min-h-[48px] font-sans text-[18px] font-semibold leading-[24px] text-[#0D2B46]">
                        {work.data.title}
                      </h3>
                      <p class="font-sans text-[12px] font-normal leading-[175%] text-[#666]">
                        {work.data.summary}
                      </p>
                    </CardContent>
                  </a>
                </Card>
              ))
            }
          </div>
        </div>
      </div>
    </section>
  </main>

  <div class="mt-auto">
    <Cta />
    <Footer />
  </div>
</Layout>
