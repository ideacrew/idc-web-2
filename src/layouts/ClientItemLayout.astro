---
import { Image } from "astro:assets";
import Breadcrumbs from "@/components/Breadcrumbs.astro";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import Layout from "./Layout.astro";
import placeholderImage from "../assets/images/about-us.svg";
import Cta from "@/components/Cta.astro";
import type { CollectionEntry } from "astro:content";

import { getEntry } from "astro:content";
const siteConfig = await getEntry("site", "config");
const SITE = siteConfig!.data;

interface Props {
  frontmatter: {
    title: string;
  };
  work: CollectionEntry<"work">;
}

// Dynamic image imports with type
const images = import.meta.glob<{ default: ImageMetadata }>(
  [
    "../assets/images/work/*.{jpeg,jpg,png,gif}",
    "../assets/images/clients/*.{jpeg,jpg,png,gif}",
    "../assets/images/*.{jpeg,jpg,png,gif,svg}",
  ],
  { eager: true }
);

// Function with type safety
const getImageFromPath = (path: string): ImageMetadata => {
  // Remove the leading slash if it exists
  const cleanPath = path.startsWith("/") ? path.slice(1) : path;

  // Try different possible paths
  const possiblePaths = [
    `../assets/${cleanPath}`,
    `../assets/images/work/${cleanPath.split("/").pop()}`,
    `../assets/images/clients/${cleanPath.split("/").pop()}`,
    `../assets/images/${cleanPath.split("/").pop()}`,
  ];

  // Find the first matching image
  for (const tryPath of possiblePaths) {
    if (images[tryPath]) {
      return images[tryPath].default;
    }
  }

  // Return placeholder if no match found
  return placeholderImage;
};

const { frontmatter, work } = Astro.props;
---

<Layout
  title={`${work.data.title} | ${SITE.siteName}`}
  description={work.data.description}
>
  <Header activeNav="clients" />

  <Breadcrumbs workName={work.data.title} />

  <main id="main-content">
    <article class="mx-auto max-w-[960px] px-4 py-16">
      <div class="mb-8 flex flex-col md:flex-row md:space-x-8">
        <div class="mb-6 w-full md:mb-0 md:w-1/2">
          <Image
            src={getImageFromPath(work.data.image.src)}
            alt={work.data.image.alt}
            width={460}
            height={306}
            class="rounded-lg"
          />
        </div>
        <div class="flex-1">
          <h1 class="font-domine mb-2 text-3xl font-normal text-[#0D2B46]">
            {work.data.title}
          </h1>
          <p class="mb-4 text-xl text-[#666]">{work.data.client}</p>
          <p class="text-lg text-[#0D2B46]">{work.data.description}</p>
        </div>
      </div>

      <div class="prose max-w-none">
        <slot />
      </div>
    </article>
  </main>

  <div class="mt-auto">
    <Cta />
    <Footer />
  </div>
</Layout>
